ARG BASE_IMAGE=ubuntu:24.04
ARG VALIDATE_IMAGE=ubuntu:24.04


FROM golang AS build
WORKDIR /app
COPY go.mod go.sum .
RUN go mod download
COPY . .
ENV CGO_ENABLED=0
RUN go build -o /app/kairos-init .


FROM scratch AS kairos-init
COPY --from=build /app/kairos-init /kairos-init

# Target to use the validator directly inside a generated image with kairos-init
FROM ${VALIDATE_IMAGE} AS validate
COPY --from=build /app/kairos-init /kairos-init
RUN /kairos-init -l debug --validate

FROM ${BASE_IMAGE}
ARG VARIANT=core
ARG MODEL=generic
ARG TRUSTED_BOOT=false
ARG KUBERNETES_PROVIDER=k3s
ARG KUBERNETES_VERSION=latest
ARG VERSION=v0.0.1
ARG FIPS=false

COPY --from=kairos-init /kairos-init /kairos-init
RUN /kairos-init --registry quay.io/kairos -l debug -s install -m "${MODEL}" -v "${VARIANT}" -t "${TRUSTED_BOOT}" -k "${KUBERNETES_PROVIDER}" --k8sversion "${KUBERNETES_VERSION}" --version "${VERSION}" $(if [ "${FIPS}" = "true" ]; then echo "--fips"; fi)
RUN /kairos-init --registry quay.io/kairos -l debug -s init -m "${MODEL}" -v "${VARIANT}" -t "${TRUSTED_BOOT}" -k "${KUBERNETES_PROVIDER}" --k8sversion "${KUBERNETES_VERSION}" --version "${VERSION}" $(if [ "${FIPS}" = "true" ]; then echo "--fips"; fi)
RUN /kairos-init --registry quay.io/kairos -l debug --validate -m "${MODEL}" -v "${VARIANT}" -t "${TRUSTED_BOOT}" -k "${KUBERNETES_PROVIDER}" --k8sversion "${KUBERNETES_VERSION}" --version "${VERSION}" $(if [ "${FIPS}" = "true" ]; then echo "--fips"; fi)
RUN rm /kairos-init